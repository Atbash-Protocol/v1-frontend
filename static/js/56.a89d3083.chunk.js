(this["webpackJsonp@scaffold-eth/react-app"]=this["webpackJsonp@scaffold-eth/react-app"]||[]).push([[56],{508:function(e){e.exports=JSON.parse('{"address":"0xE71eFBD5ff68E1A09f708812A7fC1Ca81aF1F584","abi":[{"inputs":[{"internalType":"address","name":"_staking","type":"address"},{"internalType":"address","name":"_sBash","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"_staker","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"retrieve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sBash","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"staking","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"transactionHash":"0xcdf93d56b270647a51ee3de04bfc02ae8cf9bcec95442f365606e2ada5e44bf5","receipt":{"to":null,"from":"0x956769FC9Dae4ae9309990167937Ac6DeF306fBC","contractAddress":"0xE71eFBD5ff68E1A09f708812A7fC1Ca81aF1F584","transactionIndex":204,"gasUsed":"164494","logsBloom":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","blockHash":"0x1f574bcf3d04a757c81a13c95ab8f731c5c4687a66a762cc6b7bf5bb61ccaeb9","transactionHash":"0xcdf93d56b270647a51ee3de04bfc02ae8cf9bcec95442f365606e2ada5e44bf5","logs":[],"blockNumber":15084402,"cumulativeGasUsed":"19581138","status":1,"byzantium":true},"args":["0xfd0610C109cb4e0079f801A190FD2dfC6A84aC50","0x605d3e1De7896C29A75B4E24E42CA6D1aD703809"],"numDeployments":1,"solcInputHash":"e18e42d74c3b93645e48473e74ac2b79","metadata":"{\\"compiler\\":{\\"version\\":\\"0.7.5+commit.eb77ed08\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_staking\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_sBash\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_staker\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"retrieve\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"sBash\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"staking\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/StakingWarmup.sol\\":\\"StakingWarmup\\"},\\"evmVersion\\":\\"istanbul\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\",\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":800},\\"remappings\\":[]},\\"sources\\":{\\"contracts/StakingWarmup.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: AGPL-3.0-or-later\\\\npragma solidity 0.7.5;\\\\n\\\\n\\\\ninterface IERC20 {\\\\n    function decimals() external view returns (uint8);\\\\n  /**\\\\n   * @dev Returns the amount of tokens in existence.\\\\n   */\\\\n  function totalSupply() external view returns (uint256);\\\\n\\\\n  /**\\\\n   * @dev Returns the amount of tokens owned by `account`.\\\\n   */\\\\n  function balanceOf(address account) external view returns (uint256);\\\\n\\\\n  /**\\\\n   * @dev Moves `amount` tokens from the caller\'s account to `recipient`.\\\\n   *\\\\n   * Returns a boolean value indicating whether the operation succeeded.\\\\n   *\\\\n   * Emits a {Transfer} event.\\\\n   */\\\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\\\n\\\\n  /**\\\\n   * @dev Returns the remaining number of tokens that `spender` will be\\\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\\\n   * zero by default.\\\\n   *\\\\n   * This value changes when {approve} or {transferFrom} are called.\\\\n   */\\\\n  function allowance(address owner, address spender) external view returns (uint256);\\\\n\\\\n  /**\\\\n   * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\\\n   *\\\\n   * Returns a boolean value indicating whether the operation succeeded.\\\\n   *\\\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\\\n   * that someone may use both the old and the new allowance by unfortunate\\\\n   * transaction ordering. One possible solution to mitigate this race\\\\n   * condition is to first reduce the spender\'s allowance to 0 and set the\\\\n   * desired value afterwards:\\\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\\\n   *\\\\n   * Emits an {Approval} event.\\\\n   */\\\\n  function approve(address spender, uint256 amount) external returns (bool);\\\\n\\\\n  /**\\\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\\\n   * allowance mechanism. `amount` is then deducted from the caller\'s\\\\n   * allowance.\\\\n   *\\\\n   * Returns a boolean value indicating whether the operation succeeded.\\\\n   *\\\\n   * Emits a {Transfer} event.\\\\n   */\\\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\\\n\\\\n  /**\\\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\\\n   * another (`to`).\\\\n   *\\\\n   * Note that `value` may be zero.\\\\n   */\\\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\\\n\\\\n  /**\\\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\\\n   * a call to {approve}. `value` is the new allowance.\\\\n   */\\\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\\\n}\\\\n\\\\ncontract StakingWarmup {\\\\n\\\\n    address public immutable staking;\\\\n    address public immutable sBash;\\\\n\\\\n    constructor ( address _staking, address _sBash ) {\\\\n        require( _staking != address(0) );\\\\n        staking = _staking;\\\\n        require( _sBash != address(0) );\\\\n        sBash = _sBash;\\\\n    }\\\\n\\\\n    function retrieve( address _staker, uint _amount ) external {\\\\n        require( msg.sender == staking );\\\\n        IERC20( sBash ).transfer( _staker, _amount );\\\\n    }\\\\n}\\",\\"keccak256\\":\\"0x1ff2c185cbc1b3f55bd72f52c4eda3ce2fa2fd3ed8c853e8b5a83bf2185d6750\\",\\"license\\":\\"AGPL-3.0-or-later\\"}},\\"version\\":1}","bytecode":"0x60c060405234801561001057600080fd5b506040516102b43803806102b48339818101604052604081101561003357600080fd5b5080516020909101516001600160a01b03821661004f57600080fd5b6001600160601b0319606083901b166080526001600160a01b03811661007457600080fd5b606081811b6001600160601b03191660a052608051901c91506001600160a01b03166101fa6100ba6000398060fb52806101a252508060a2528060cf52506101fa6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634cf088d914610046578063c3a2a6651461006a578063f13e7b0114610098575b600080fd5b61004e6100a0565b604080516001600160a01b039092168252519081900360200190f35b6100966004803603604081101561008057600080fd5b506001600160a01b0381351690602001356100c4565b005b61004e6101a0565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100f957600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561017057600080fd5b505af1158015610184573d6000803e3d6000fd5b505050506040513d602081101561019a57600080fd5b50505050565b7f00000000000000000000000000000000000000000000000000000000000000008156fea26469706673582212206c2b0d8eb26b63836981bd51d31d82c67902f65b38d62fdf4349baa4807d1c4664736f6c63430007050033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100415760003560e01c80634cf088d914610046578063c3a2a6651461006a578063f13e7b0114610098575b600080fd5b61004e6100a0565b604080516001600160a01b039092168252519081900360200190f35b6100966004803603604081101561008057600080fd5b506001600160a01b0381351690602001356100c4565b005b61004e6101a0565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100f957600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561017057600080fd5b505af1158015610184573d6000803e3d6000fd5b505050506040513d602081101561019a57600080fd5b50505050565b7f00000000000000000000000000000000000000000000000000000000000000008156fea26469706673582212206c2b0d8eb26b63836981bd51d31d82c67902f65b38d62fdf4349baa4807d1c4664736f6c63430007050033","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null}}')}}]);
//# sourceMappingURL=56.a89d3083.chunk.js.map